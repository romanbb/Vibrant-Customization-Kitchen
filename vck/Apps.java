/*
 * Apps.java
 *
 * Created on Dec 30, 2010, 10:46:26 AM
 */
package vck;

import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author roman
 */
public class Apps extends javax.swing.JFrame {

    ArrayList<String> sources = new ArrayList<String>();
    boolean useSystem, useData, useLib, wipeDalvik;

    public Apps() {
        initComponents();

    }

    private void createDirectories() {
        new File("system/app").mkdirs();
        new File("data/app").mkdirs();
        new File("system/lib").mkdirs();
        new File("META-INF/com/google/android").mkdirs();

        addApp("kitchen/META-INF/CERT.RSA", "META-INF/CERT.RSA");
        addApp("kitchen/META-INF/CERT.SF", "META-INF/CERT.SF");
        addApp("kitchen/META-INF/MANIFEST.MF", "META-INF/MANIFEST.MF");
    }

    private void cleanUp() {
        deleteDir(new File("system"));
        deleteDir(new File("data"));
        deleteDir(new File("META-INF"));
    }

    private void createUpdateScript() {
        //check whether to use data and system
        for (String entry : sources) {
            if (!useData && entry.startsWith("data")) {
                useData = true;
                System.out.println(entry + " setting data to true");
                //break;
            }
            if (!useSystem && entry.startsWith("system")) {
                useSystem = true;
                System.out.println(entry + " setting system to true");
                //break;
            }
        }



        //writing the script
        PrintWriter out = null;
        try {
            File f = new File("META-INF/com/google/android/update-script");
            FileWriter outFile = new FileWriter(f);
            out = new PrintWriter(outFile);
            int i = 1;

            if (wipeDalvik) {
                out.println("show_progress 0." + i + " 0");
                out.println("delete_recursive DATA:dalvik-cache");
                out.println("show_progress 0." + i + " 10");
                i++;
            }

            out.println("show_progress 0." + i + " 0");
            if (useSystem) {
                out.println("copy_dir PACKAGE:system SYSTEM:");
            }
            if (useData) {
                out.println("copy_dir PACKAGE:data DATA:");
            }
            out.println("show_progress 0." + i + " 10");
            out.close();

            //sources.add("META-INF/com/google/android/update-script");
        } catch (IOException ex) {
            Logger.getLogger(Apps.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static boolean deleteDir(File dir) {
        if (dir.isDirectory()) {
            String[] children = dir.list();
            for (int i = 0; i < children.length; i++) {
                boolean success = deleteDir(new File(dir, children[i]));
                if (!success) {
                    return false;
                }
            }
        }

        // The directory is now empty so delete it
        return dir.delete();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MmsGroup = new javax.swing.ButtonGroup();
        generateZipButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        utilitiesPanel = new javax.swing.JPanel();
        utilitiesTitaniumButton = new javax.swing.JCheckBox();
        utilitiesQuickBootButton = new javax.swing.JCheckBox();
        utilitiesRomManagerButton = new javax.swing.JCheckBox();
        utilitiesSpareParts = new javax.swing.JCheckBox();
        utilitiesSgsTools = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        vibrantAllShare = new javax.swing.JCheckBox();
        vibrantAvatar = new javax.swing.JCheckBox();
        vibrantMediahub = new javax.swing.JCheckBox();
        vibrantWriteandGo = new javax.swing.JCheckBox();
        vibrantGogo = new javax.swing.JCheckBox();
        vibrantLayar = new javax.swing.JCheckBox();
        vibrantMiniDiary = new javax.swing.JCheckBox();
        vibrantKindle = new javax.swing.JCheckBox();
        vibrantAmazon = new javax.swing.JCheckBox();
        vibrantMemo = new javax.swing.JCheckBox();
        vibrantWifiCalling = new javax.swing.JCheckBox();
        vibrantTmoTv = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        vibrantVisualVoicemail = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        launchersLauncherPro = new javax.swing.JCheckBox();
        launchersAdw = new javax.swing.JCheckBox();
        launchersGingerbread = new javax.swing.JCheckBox();
        launcherTouchWiz = new javax.swing.JCheckBox();
        launchersZeam = new javax.swing.JCheckBox();
        miscGingerbreadkb = new javax.swing.JCheckBox();
        miscDockHome = new javax.swing.JCheckBox();
        miscCarHome = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        mmsAospButton = new javax.swing.JRadioButton();
        touchWizMmsButton = new javax.swing.JRadioButton();
        mmsDontModifyButton = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        wipeDalvikCacheToggle = new javax.swing.JCheckBox();
        zipName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vibrant Customization Kitchen");
        setIconImage(Toolkit.getDefaultToolkit().getImage("icon.png"));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        generateZipButton.setText("Generate ZIP");
        generateZipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateZipButtonActionPerformed(evt);
            }
        });

        jTabbedPane1.setFocusable(false);

        utilitiesTitaniumButton.setText("Titanium Backup");
        utilitiesTitaniumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilitiesTitaniumButtonActionPerformed(evt);
            }
        });

        utilitiesQuickBootButton.setText("Quick Boot");
        utilitiesQuickBootButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilitiesQuickBootButtonActionPerformed(evt);
            }
        });

        utilitiesRomManagerButton.setText("ROM Manager");
        utilitiesRomManagerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilitiesRomManagerButtonActionPerformed(evt);
            }
        });

        utilitiesSpareParts.setText("Spare Parts");
        utilitiesSpareParts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilitiesSparePartsActionPerformed(evt);
            }
        });

        utilitiesSgsTools.setText("SGS Tools");
        utilitiesSgsTools.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilitiesSgsToolsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout utilitiesPanelLayout = new javax.swing.GroupLayout(utilitiesPanel);
        utilitiesPanel.setLayout(utilitiesPanelLayout);
        utilitiesPanelLayout.setHorizontalGroup(
            utilitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utilitiesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(utilitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(utilitiesTitaniumButton)
                    .addComponent(utilitiesQuickBootButton)
                    .addComponent(utilitiesRomManagerButton)
                    .addComponent(utilitiesSgsTools)
                    .addComponent(utilitiesSpareParts))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        utilitiesPanelLayout.setVerticalGroup(
            utilitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(utilitiesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(utilitiesTitaniumButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(utilitiesQuickBootButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(utilitiesRomManagerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(utilitiesSpareParts)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(utilitiesSgsTools)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Utilities", utilitiesPanel);

        jPanel1.setEnabled(false);

        vibrantAllShare.setText("AllShare");
        vibrantAllShare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantAllShareActionPerformed(evt);
            }
        });

        vibrantAvatar.setText("Avatar");
        vibrantAvatar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantAvatarActionPerformed(evt);
            }
        });

        vibrantMediahub.setText("Mediahub");
        vibrantMediahub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantMediahubActionPerformed(evt);
            }
        });

        vibrantWriteandGo.setText("Write and Go");
        vibrantWriteandGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantWriteandGoActionPerformed(evt);
            }
        });

        vibrantGogo.setText("GoGo");
        vibrantGogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantGogoActionPerformed(evt);
            }
        });

        vibrantLayar.setText("Layar");
        vibrantLayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantLayarActionPerformed(evt);
            }
        });

        vibrantMiniDiary.setText("Mini Diary");
        vibrantMiniDiary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantMiniDiaryActionPerformed(evt);
            }
        });

        vibrantKindle.setText("Kindle");
        vibrantKindle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantKindleActionPerformed(evt);
            }
        });

        vibrantAmazon.setText("Amazon");
        vibrantAmazon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantAmazonActionPerformed(evt);
            }
        });

        vibrantMemo.setText("Memo");
        vibrantMemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantMemoActionPerformed(evt);
            }
        });

        vibrantWifiCalling.setText("Wifi Calling");
        vibrantWifiCalling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantWifiCallingActionPerformed(evt);
            }
        });

        vibrantTmoTv.setText("T-Mobile TV");
        vibrantTmoTv.setEnabled(false);

        jCheckBox2.setText("Audio Postcard");

        vibrantVisualVoicemail.setText("Visual Voicemail");
        vibrantVisualVoicemail.setEnabled(false);
        vibrantVisualVoicemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vibrantVisualVoicemailActionPerformed(evt);
            }
        });

        jCheckBox4.setText("Think Free");
        jCheckBox4.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(vibrantAvatar)
                    .addComponent(vibrantAllShare)
                    .addComponent(vibrantAmazon)
                    .addComponent(jCheckBox2)
                    .addComponent(vibrantGogo)
                    .addComponent(vibrantKindle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vibrantMiniDiary)
                            .addComponent(vibrantTmoTv)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vibrantLayar)
                                    .addComponent(vibrantMediahub)
                                    .addComponent(vibrantMemo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vibrantVisualVoicemail)
                                    .addComponent(vibrantWifiCalling)
                                    .addComponent(vibrantWriteandGo))))
                        .addGap(99, 99, 99))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBox4)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vibrantAllShare)
                    .addComponent(vibrantLayar)
                    .addComponent(vibrantVisualVoicemail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vibrantAmazon)
                    .addComponent(vibrantMediahub)
                    .addComponent(vibrantWriteandGo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(vibrantMemo)
                    .addComponent(vibrantWifiCalling))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vibrantAvatar)
                    .addComponent(vibrantMiniDiary))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vibrantGogo)
                    .addComponent(vibrantTmoTv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vibrantKindle)
                    .addComponent(jCheckBox4))
                .addGap(96, 96, 96))
        );

        jTabbedPane1.addTab("Vibrant Apps", jPanel1);

        launchersLauncherPro.setText("LauncherPro 8.2");
        launchersLauncherPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchersLauncherProActionPerformed(evt);
            }
        });

        launchersAdw.setText("ADW Launcher");
        launchersAdw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchersAdwActionPerformed(evt);
            }
        });

        launchersGingerbread.setText("Gingerbread Launcher");
        launchersGingerbread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchersGingerbreadActionPerformed(evt);
            }
        });

        launcherTouchWiz.setText("TouchWiz Launcher");
        launcherTouchWiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launcherTouchWizActionPerformed(evt);
            }
        });

        launchersZeam.setText("Zeam");
        launchersZeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                launchersZeamActionPerformed(evt);
            }
        });

        miscGingerbreadkb.setText("Gingerbread Keyboard");
        miscGingerbreadkb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miscGingerbreadkbActionPerformed(evt);
            }
        });

        miscDockHome.setText("Dock Home");
        miscDockHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miscDockHomeActionPerformed(evt);
            }
        });

        miscCarHome.setText("Car Home");
        miscCarHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miscCarHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(launchersLauncherPro)
                            .addComponent(launchersAdw)
                            .addComponent(launchersGingerbread))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(miscCarHome)
                            .addComponent(miscDockHome)
                            .addComponent(miscGingerbreadkb)))
                    .addComponent(launcherTouchWiz)
                    .addComponent(launchersZeam))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(miscCarHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(miscDockHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(miscGingerbreadkb))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(launchersLauncherPro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(launchersAdw)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(launchersGingerbread)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(launcherTouchWiz)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(launchersZeam)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Launchers & Misc", jPanel4);

        MmsGroup.add(mmsAospButton);
        mmsAospButton.setText("AOSP Mms");
        mmsAospButton.setToolTipText("supports lock screen puzzle notifications");
        mmsAospButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmsAospButtonActionPerformed(evt);
            }
        });

        MmsGroup.add(touchWizMmsButton);
        touchWizMmsButton.setText("TouchWiz Mms");
        touchWizMmsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                touchWizMmsButtonActionPerformed(evt);
            }
        });

        MmsGroup.add(mmsDontModifyButton);
        mmsDontModifyButton.setSelected(true);
        mmsDontModifyButton.setText("Don't Modify");
        mmsDontModifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmsDontModifyButtonActionPerformed(evt);
            }
        });

        jRadioButton1.setText("AOSP Email");
        jRadioButton1.setEnabled(false);

        jRadioButton2.setText("TouchWiz Email");
        jRadioButton2.setEnabled(false);

        jRadioButton3.setText("Don't Modify");
        jRadioButton3.setEnabled(false);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mmsAospButton)
                    .addComponent(touchWizMmsButton)
                    .addComponent(mmsDontModifyButton))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(mmsAospButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(touchWizMmsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mmsDontModifyButton)))
                .addGap(77, 77, 77))
        );

        jTabbedPane1.addTab("System", jPanel2);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("VCK v0.4");

        jLabel2.setText("by Roman");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("ALPHA");
        jLabel3.setOpaque(true);

        wipeDalvikCacheToggle.setText("Wipe Dalvik Cache");
        wipeDalvikCacheToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wipeDalvikCacheToggleActionPerformed(evt);
            }
        });

        zipName.setText("flash");

        jLabel4.setText(".zip");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel2)))
                    .addComponent(generateZipButton, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(zipName, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addComponent(wipeDalvikCacheToggle))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(wipeDalvikCacheToggle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zipName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(generateZipButton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private List<String> recursiveFileSearch(File dir) {
        //File systemFolder = new File("");
        List<String> list = new ArrayList<String>();
        if (dir.isDirectory()) {
            for (File f : dir.listFiles()) {
                if (!f.isDirectory()) {
                    System.out.println(f.getPath());
                    list.add(f.getPath());
                } else {
                    list.addAll(recursiveFileSearch(f));
                }
            }
        }
        return list;
    }

    private void generateZipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateZipButtonActionPerformed
        //folders should be created when program starts, cleaned when it closes
        //file all files in /system/, /data/, and /META-INF/, add to sources
        sources.clear();
        sources.addAll(recursiveFileSearch(new File("META-INF")));
        sources.addAll(recursiveFileSearch(new File("system")));
        sources.addAll(recursiveFileSearch(new File("data")));
        createUpdateScript();//generate update script based on files in sources

        // Create a buffer for reading the files
        byte[] buf = new byte[1024];

        try {
            // Create the ZIP file
            String target = this.zipName.getText();
            if (target.equals("")) {
                target = "flash";
            }
            target += ".zip";

            ZipOutputStream out = new ZipOutputStream(new FileOutputStream(target));

            // Compress the files
            for (int i = 0; i < sources.size(); i++) {
                FileInputStream in = new FileInputStream(sources.get(i));

                // Add ZIP entry to output stream.
                out.putNextEntry(new ZipEntry(sources.get(i)));

                // Transfer bytes from the file to the ZIP file
                int len;
                while ((len = in.read(buf)) > 0) {
                    out.write(buf, 0, len);
                }

                // Complete the entry
                out.closeEntry();
                in.close();
            }

            // Complete the ZIP file
            out.close();

            JOptionPane.showMessageDialog(null, "Please, for the love of your phone, make a Nandroid backup. \nThis is an alpha.", "Success!", 1);
        } catch (FileNotFoundException fnf) {
            JOptionPane.showMessageDialog(null, "Improper name.", "Error!", 0);
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
        }
    }//GEN-LAST:event_generateZipButtonActionPerformed

    public static void copyFile(File sourceFile, File destFile) throws IOException {
        if (!destFile.exists()) {
            destFile.createNewFile();
        }

        FileChannel source = null;
        FileChannel destination = null;
        try {
            source = new FileInputStream(sourceFile).getChannel();
            destination = new FileOutputStream(destFile).getChannel();
            destination.transferFrom(source, 0, source.size());
        } finally {
            if (source != null) {
                source.close();
            }
            if (destination != null) {
                destination.close();
            }
        }
    }

    private void addApp(String sourceLoc, String targetLoc) {
        try {
            File source = new File(sourceLoc);
            File target = new File(targetLoc);

            copyFile(source, target);
            //sources.add(targetLoc);
        } catch (IOException ex) {
            Logger.getLogger(Apps.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void removeApp(String s) {
        try {
            File f = new File(s);
            f.delete();
            if (sources.contains(s)) {
                //sources.remove(s);
            }
        } catch (Exception e) {
            System.out.println("error in removeApp");
        }
    }

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        cleanUp();
        createDirectories();
    }//GEN-LAST:event_formComponentShown

    private void wipeDalvikCacheToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wipeDalvikCacheToggleActionPerformed
        if (((JCheckBox) evt.getSource()).isSelected()) {
            wipeDalvik = true;
        } else {
            wipeDalvik = false;
        }
    }//GEN-LAST:event_wipeDalvikCacheToggleActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cleanUp();
    }//GEN-LAST:event_formWindowClosing

    private void miscCarHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miscCarHomeActionPerformed
        String target = "data/app/CarHomeGoogle.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
            addApp("kitchen/data/app/CarHomeLauncher.apk", "data/app/CarHomeLauncher.apk");
        } else {
            removeApp(target);
            removeApp("data/app/CarHomeLauncher.apk");
        }
}//GEN-LAST:event_miscCarHomeActionPerformed

    private void miscDockHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miscDockHomeActionPerformed
        String target = "data/app/CradleMain.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_miscDockHomeActionPerformed

    private void miscGingerbreadkbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miscGingerbreadkbActionPerformed
        String target = "system/app/ime-mtm-stock-gingerbread.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
            addApp("kitchen/system/lib/libjni_latinime.so", "system/lib/libjni_latinime.so");
        } else {
            removeApp(target);
            removeApp("system/lib/libjni_latinime.so");
        }
}//GEN-LAST:event_miscGingerbreadkbActionPerformed

    private void vibrantMemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantMemoActionPerformed
        String target = "system/app/Memo.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_vibrantMemoActionPerformed

    private void vibrantAmazonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantAmazonActionPerformed
        String target = "system/app/AmazonMp3.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_vibrantAmazonActionPerformed

    private void vibrantKindleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantKindleActionPerformed
        String target = "system/app/KindleStub.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_vibrantKindleActionPerformed

    private void vibrantMiniDiaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantMiniDiaryActionPerformed
        String target = "system/app/MiniDiary.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_vibrantMiniDiaryActionPerformed

    private void vibrantLayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantLayarActionPerformed
        String target = "system/app/Layar-samsung.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_vibrantLayarActionPerformed

    private void vibrantGogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantGogoActionPerformed
        String target = "system/app/GoGo.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_vibrantGogoActionPerformed

    private void vibrantWriteandGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantWriteandGoActionPerformed
        String target = "system/app/WriteandGo.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_vibrantWriteandGoActionPerformed

    private void vibrantMediahubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantMediahubActionPerformed
        String target = "system/app/MediaHub.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_vibrantMediahubActionPerformed

    private void vibrantAvatarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantAvatarActionPerformed
        String target = "system/app/Avatar.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_vibrantAvatarActionPerformed

    private void vibrantAllShareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantAllShareActionPerformed
        String target = "system/app/Dlna.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_vibrantAllShareActionPerformed

    private void mmsDontModifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmsDontModifyButtonActionPerformed
        try {
            new File("system/app/Mms.apk").delete();
        } catch (Exception e) {
        }
}//GEN-LAST:event_mmsDontModifyButtonActionPerformed

    private void touchWizMmsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_touchWizMmsButtonActionPerformed
        String source = "kitchen/system/app/Mms-TW.apk";
        String target = "system/app/Mms.apk";
        if (this.touchWizMmsButton.isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_touchWizMmsButtonActionPerformed

    private void mmsAospButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmsAospButtonActionPerformed
        String source = "kitchen/system/app/Mms-AOSP.apk";
        String target = "system/app/Mms.apk";
        if (this.mmsAospButton.isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_mmsAospButtonActionPerformed

    private void utilitiesSgsToolsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilitiesSgsToolsActionPerformed
        String target = "data/app/de.Fr4gg0r.SGS.Tools.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_utilitiesSgsToolsActionPerformed

    private void utilitiesSparePartsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilitiesSparePartsActionPerformed
        String target = "data/app/com.androidapps.spareparts.apk";
        String source = "kitchen/" + target;
        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_utilitiesSparePartsActionPerformed

    private void utilitiesRomManagerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilitiesRomManagerButtonActionPerformed
        String target = "data/app/RomManager.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_utilitiesRomManagerButtonActionPerformed

    private void utilitiesQuickBootButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilitiesQuickBootButtonActionPerformed
        String target = "data/app/Quickboot.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_utilitiesQuickBootButtonActionPerformed

    private void utilitiesTitaniumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilitiesTitaniumButtonActionPerformed
        String target = "data/app/TitaniumBackup.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
}//GEN-LAST:event_utilitiesTitaniumButtonActionPerformed

    private void launchersLauncherProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchersLauncherProActionPerformed
        String target = "data/app/LauncherPro-0.8.2.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
    }//GEN-LAST:event_launchersLauncherProActionPerformed

    private void launchersGingerbreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchersGingerbreadActionPerformed
        String target = "data/app/Launcher2.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
    }//GEN-LAST:event_launchersGingerbreadActionPerformed

    private void launcherTouchWizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launcherTouchWizActionPerformed
        String target = "system/app/TouchWiz30Launcher.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
    }//GEN-LAST:event_launcherTouchWizActionPerformed

    private void vibrantWifiCallingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantWifiCallingActionPerformed
        String target = "system/app/WiFi-Calling.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
            addApp("kitchen/system/lib/libganril.so", "system/lib/libganril.so");
            addApp("kitchen/system/lib/libkineto.so", "system/lib/libkineto.so");
            addApp("kitchen/system/lib/librilswitch.so", "system/lib/librilswitch.so");
        } else {
            removeApp(target);
            removeApp("system/lib/libganril.so");
            removeApp("system/lib/libkineto.so");
            removeApp("system/lib/librilswitch.so");
        }
    }//GEN-LAST:event_vibrantWifiCallingActionPerformed

    private void launchersAdwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchersAdwActionPerformed
        String target = "data/app/org.adw.launcher.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
    }//GEN-LAST:event_launchersAdwActionPerformed

    private void launchersZeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_launchersZeamActionPerformed
        String target = "data/app/org.zeam.apk";
        String source = "kitchen/" + target;

        if (((JCheckBox) evt.getSource()).isSelected()) {
            addApp(source, target);
        } else {
            removeApp(target);
        }
    }//GEN-LAST:event_launchersZeamActionPerformed

    private void vibrantVisualVoicemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vibrantVisualVoicemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vibrantVisualVoicemailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception e) {
            System.out.println("Look and feel failure");
        }
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Apps().setVisible(true);
            }
        });



    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup MmsGroup;
    private javax.swing.JButton generateZipButton;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JCheckBox launcherTouchWiz;
    private javax.swing.JCheckBox launchersAdw;
    private javax.swing.JCheckBox launchersGingerbread;
    private javax.swing.JCheckBox launchersLauncherPro;
    private javax.swing.JCheckBox launchersZeam;
    private javax.swing.JCheckBox miscCarHome;
    private javax.swing.JCheckBox miscDockHome;
    private javax.swing.JCheckBox miscGingerbreadkb;
    private javax.swing.JRadioButton mmsAospButton;
    private javax.swing.JRadioButton mmsDontModifyButton;
    private javax.swing.JRadioButton touchWizMmsButton;
    private javax.swing.JPanel utilitiesPanel;
    private javax.swing.JCheckBox utilitiesQuickBootButton;
    private javax.swing.JCheckBox utilitiesRomManagerButton;
    private javax.swing.JCheckBox utilitiesSgsTools;
    private javax.swing.JCheckBox utilitiesSpareParts;
    private javax.swing.JCheckBox utilitiesTitaniumButton;
    private javax.swing.JCheckBox vibrantAllShare;
    private javax.swing.JCheckBox vibrantAmazon;
    private javax.swing.JCheckBox vibrantAvatar;
    private javax.swing.JCheckBox vibrantGogo;
    private javax.swing.JCheckBox vibrantKindle;
    private javax.swing.JCheckBox vibrantLayar;
    private javax.swing.JCheckBox vibrantMediahub;
    private javax.swing.JCheckBox vibrantMemo;
    private javax.swing.JCheckBox vibrantMiniDiary;
    private javax.swing.JCheckBox vibrantTmoTv;
    private javax.swing.JCheckBox vibrantVisualVoicemail;
    private javax.swing.JCheckBox vibrantWifiCalling;
    private javax.swing.JCheckBox vibrantWriteandGo;
    private javax.swing.JCheckBox wipeDalvikCacheToggle;
    private javax.swing.JTextField zipName;
    // End of variables declaration//GEN-END:variables
}
